# AI COURSE VBA MACROS - EXCEL MODEL
# Advanced Excel VBA Macros for Automated Financial Analysis and Reporting

## VBA MACRO CODE FOR AUTOMATED CALCULATIONS
Sub CalculateRevenueProjection()
    ' Automated Revenue Projection Calculator
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    ' Clear existing data
    ws.Range("A1:Z1000").Clear
    
    ' Set headers
    ws.Cells(1, 1).Value = "Month"
    ws.Cells(1, 2).Value = "Leads"
    ws.Cells(1, 3).Value = "Revenue"
    ws.Cells(1, 4).Value = "Growth_Rate"
    ws.Cells(1, 5).Value = "Cumulative_Revenue"
    
    ' Calculate projections for 12 months
    Dim i As Integer
    Dim leads As Double
    Dim revenue As Double
    Dim growthRate As Double
    Dim cumulativeRevenue As Double
    
    cumulativeRevenue = 0
    leads = 500
    
    For i = 1 To 12
        ws.Cells(i + 1, 1).Value = i
        ws.Cells(i + 1, 2).Value = leads
        
        ' Calculate revenue based on leads and conversion rate
        revenue = leads * 0.15 * 497 ' 15% conversion rate, $497 average price
        ws.Cells(i + 1, 3).Value = revenue
        
        ' Calculate growth rate
        If i = 1 Then
            growthRate = 0
        Else
            growthRate = (revenue - ws.Cells(i, 3).Value) / ws.Cells(i, 3).Value
        End If
        ws.Cells(i + 1, 4).Value = growthRate
        
        ' Calculate cumulative revenue
        cumulativeRevenue = cumulativeRevenue + revenue
        ws.Cells(i + 1, 5).Value = cumulativeRevenue
        
        ' Increase leads by 20% each month
        leads = leads * 1.2
    Next i
    
    ' Format the data
    ws.Range("A1:E13").AutoFormat xlRangeAutoFormatClassic2
    
    MsgBox "Revenue projection calculated successfully!"
End Sub

## VBA MACRO CODE FOR AUTOMATED CHARTS
Sub CreateRevenueChart()
    ' Automated Chart Creation
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    ' Create chart
    Dim chartObj As ChartObject
    Set chartObj = ws.ChartObjects.Add(Left:=400, Top:=50, Width:=400, Height:=300)
    
    With chartObj.Chart
        .SetSourceData ws.Range("A1:E13")
        .ChartType = xlLine
        .HasTitle = True
        .ChartTitle.Text = "Revenue Projection - 12 Months"
        .Axes(xlCategory).HasTitle = True
        .Axes(xlCategory).AxisTitle.Text = "Month"
        .Axes(xlValue).HasTitle = True
        .Axes(xlValue).AxisTitle.Text = "Revenue ($)"
    End With
    
    MsgBox "Chart created successfully!"
End Sub

## VBA MACRO CODE FOR AUTOMATED REPORTING
Sub GenerateMonthlyReport()
    ' Automated Monthly Report Generator
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    ' Create new worksheet for report
    Dim reportWs As Worksheet
    Set reportWs = Worksheets.Add
    reportWs.Name = "Monthly_Report_" & Format(Date, "YYYY_MM")
    
    ' Add report headers
    reportWs.Cells(1, 1).Value = "AI COURSE MONTHLY REPORT"
    reportWs.Cells(1, 1).Font.Bold = True
    reportWs.Cells(1, 1).Font.Size = 16
    
    reportWs.Cells(2, 1).Value = "Report Date: " & Format(Date, "MMMM DD, YYYY")
    reportWs.Cells(3, 1).Value = "Generated by: VBA Macro"
    
    ' Add key metrics
    reportWs.Cells(5, 1).Value = "KEY METRICS"
    reportWs.Cells(5, 1).Font.Bold = True
    
    reportWs.Cells(6, 1).Value = "Monthly Revenue:"
    reportWs.Cells(6, 2).Value = "$753,370"
    reportWs.Cells(6, 2).NumberFormat = "$#,##0"
    
    reportWs.Cells(7, 1).Value = "Monthly Profit:"
    reportWs.Cells(7, 2).Value = "$476,211"
    reportWs.Cells(7, 2).NumberFormat = "$#,##0"
    
    reportWs.Cells(8, 1).Value = "Customer Count:"
    reportWs.Cells(8, 2).Value = "900"
    
    reportWs.Cells(9, 1).Value = "Churn Rate:"
    reportWs.Cells(9, 2).Value = "3%"
    
    reportWs.Cells(10, 1).Value = "CAC:"
    reportWs.Cells(10, 2).Value = "$12.50"
    reportWs.Cells(10, 2).NumberFormat = "$#,##0.00"
    
    reportWs.Cells(11, 1).Value = "LTV:"
    reportWs.Cells(11, 2).Value = "$3,200"
    reportWs.Cells(11, 2).NumberFormat = "$#,##0"
    
    ' Format the report
    reportWs.Range("A1:B11").AutoFormat xlRangeAutoFormatClassic2
    
    MsgBox "Monthly report generated successfully!"
End Sub

## VBA MACRO CODE FOR DATA VALIDATION
Sub ValidateFinancialData()
    ' Automated Data Validation
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    Dim errorCount As Integer
    errorCount = 0
    
    ' Check for negative values in revenue
    Dim revenueRange As Range
    Set revenueRange = ws.Range("C2:C13")
    
    Dim cell As Range
    For Each cell In revenueRange
        If cell.Value < 0 Then
            cell.Interior.Color = RGB(255, 0, 0) ' Red background
            errorCount = errorCount + 1
        End If
    Next cell
    
    ' Check for missing values
    For Each cell In revenueRange
        If IsEmpty(cell.Value) Then
            cell.Interior.Color = RGB(255, 255, 0) ' Yellow background
            errorCount = errorCount + 1
        End If
    Next cell
    
    ' Check for unrealistic growth rates
    Dim growthRange As Range
    Set growthRange = ws.Range("D2:D13")
    
    For Each cell In growthRange
        If cell.Value > 1 Or cell.Value < -0.5 Then
            cell.Interior.Color = RGB(255, 165, 0) ' Orange background
            errorCount = errorCount + 1
        End If
    Next cell
    
    If errorCount = 0 Then
        MsgBox "Data validation passed! No errors found."
    Else
        MsgBox "Data validation found " & errorCount & " errors. Please review highlighted cells."
    End If
End Sub

## VBA MACRO CODE FOR AUTOMATED EMAIL REPORTS
Sub SendEmailReport()
    ' Automated Email Report Sender
    Dim outlookApp As Object
    Dim outlookMail As Object
    
    ' Create Outlook application
    Set outlookApp = CreateObject("Outlook.Application")
    Set outlookMail = outlookApp.CreateItem(0)
    
    With outlookMail
        .To = "stakeholders@company.com"
        .CC = "management@company.com"
        .Subject = "AI Course Monthly Financial Report - " & Format(Date, "MMMM YYYY")
        .Body = "Please find attached the monthly financial report for the AI Course business." & vbCrLf & vbCrLf & _
                "Key Highlights:" & vbCrLf & _
                "- Monthly Revenue: $753,370" & vbCrLf & _
                "- Monthly Profit: $476,211" & vbCrLf & _
                "- Customer Count: 900" & vbCrLf & _
                "- Churn Rate: 3%" & vbCrLf & vbCrLf & _
                "Best regards," & vbCrLf & _
                "Finance Team"
        
        ' Attach the current workbook
        .Attachments.Add ActiveWorkbook.FullName
        
        .Send
    End With
    
    Set outlookMail = Nothing
    Set outlookApp = Nothing
    
    MsgBox "Email report sent successfully!"
End Sub

## VBA MACRO CODE FOR SCENARIO ANALYSIS
Sub RunScenarioAnalysis()
    ' Automated Scenario Analysis
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    ' Create scenario analysis worksheet
    Dim scenarioWs As Worksheet
    Set scenarioWs = Worksheets.Add
    scenarioWs.Name = "Scenario_Analysis"
    
    ' Add scenario headers
    scenarioWs.Cells(1, 1).Value = "Scenario"
    scenarioWs.Cells(1, 2).Value = "Revenue_Multiplier"
    scenarioWs.Cells(1, 3).Value = "Predicted_Revenue"
    scenarioWs.Cells(1, 4).Value = "Profit_Multiplier"
    scenarioWs.Cells(1, 5).Value = "Predicted_Profit"
    
    ' Define scenarios
    Dim scenarios(1 To 4) As String
    scenarios(1) = "Optimistic"
    scenarios(2) = "Base"
    scenarios(3) = "Pessimistic"
    scenarios(4) = "Crisis"
    
    Dim revenueMultipliers(1 To 4) As Double
    revenueMultipliers(1) = 1.5
    revenueMultipliers(2) = 1.0
    revenueMultipliers(3) = 0.6
    revenueMultipliers(4) = 0.4
    
    Dim profitMultipliers(1 To 4) As Double
    profitMultipliers(1) = 1.5
    profitMultipliers(2) = 1.0
    profitMultipliers(3) = 0.6
    profitMultipliers(4) = 0.4
    
    Dim baseRevenue As Double
    Dim baseProfit As Double
    baseRevenue = 753370
    baseProfit = 476211
    
    ' Calculate scenarios
    Dim i As Integer
    For i = 1 To 4
        scenarioWs.Cells(i + 1, 1).Value = scenarios(i)
        scenarioWs.Cells(i + 1, 2).Value = revenueMultipliers(i)
        scenarioWs.Cells(i + 1, 3).Value = baseRevenue * revenueMultipliers(i)
        scenarioWs.Cells(i + 1, 4).Value = profitMultipliers(i)
        scenarioWs.Cells(i + 1, 5).Value = baseProfit * profitMultipliers(i)
    Next i
    
    ' Format the data
    scenarioWs.Range("A1:E5").AutoFormat xlRangeAutoFormatClassic2
    
    MsgBox "Scenario analysis completed successfully!"
End Sub

## VBA MACRO CODE FOR AUTOMATED BACKUP
Sub BackupWorkbook()
    ' Automated Workbook Backup
    Dim backupPath As String
    Dim backupName As String
    
    ' Create backup path
    backupPath = ThisWorkbook.Path & "\Backups\"
    
    ' Create backup directory if it doesn't exist
    If Dir(backupPath, vbDirectory) = "" Then
        MkDir backupPath
    End If
    
    ' Create backup filename
    backupName = "AI_Course_Backup_" & Format(Now, "YYYY_MM_DD_HH_MM_SS") & ".xlsx"
    
    ' Save backup
    ThisWorkbook.SaveCopyAs backupPath & backupName
    
    MsgBox "Backup created successfully at: " & backupPath & backupName
End Sub

## VBA MACRO CODE FOR AUTOMATED DATA REFRESH
Sub RefreshAllData()
    ' Automated Data Refresh
    Dim ws As Worksheet
    
    ' Refresh all worksheets
    For Each ws In ThisWorkbook.Worksheets
        ws.Calculate
    Next ws
    
    ' Refresh external data connections
    ThisWorkbook.RefreshAll
    
    ' Update pivot tables
    Dim pt As PivotTable
    For Each ws In ThisWorkbook.Worksheets
        For Each pt In ws.PivotTables
            pt.RefreshTable
        Next pt
    Next ws
    
    MsgBox "All data refreshed successfully!"
End Sub

## VBA MACRO CODE FOR AUTOMATED ALERTS
Sub CheckAlerts()
    ' Automated Alert System
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    Dim alertCount As Integer
    alertCount = 0
    
    ' Check revenue threshold
    If ws.Cells(2, 3).Value < 400000 Then
        MsgBox "ALERT: Revenue below threshold!", vbCritical
        alertCount = alertCount + 1
    End If
    
    ' Check churn rate
    If ws.Cells(2, 4).Value > 0.05 Then
        MsgBox "ALERT: Churn rate above threshold!", vbCritical
        alertCount = alertCount + 1
    End If
    
    ' Check CAC
    If ws.Cells(2, 5).Value > 20 Then
        MsgBox "ALERT: CAC above threshold!", vbCritical
        alertCount = alertCount + 1
    End If
    
    If alertCount = 0 Then
        MsgBox "All metrics within normal range.", vbInformation
    Else
        MsgBox alertCount & " alerts triggered. Please review metrics.", vbExclamation
    End If
End Sub

## VBA MACRO CODE FOR AUTOMATED DASHBOARD UPDATE
Sub UpdateDashboard()
    ' Automated Dashboard Update
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    ' Update key metrics
    ws.Cells(1, 1).Value = "Last Updated: " & Format(Now, "YYYY-MM-DD HH:MM:SS")
    
    ' Update revenue metrics
    ws.Cells(2, 1).Value = "Monthly Revenue:"
    ws.Cells(2, 2).Value = "$753,370"
    ws.Cells(2, 2).NumberFormat = "$#,##0"
    
    ' Update profit metrics
    ws.Cells(3, 1).Value = "Monthly Profit:"
    ws.Cells(3, 2).Value = "$476,211"
    ws.Cells(3, 2).NumberFormat = "$#,##0"
    
    ' Update customer metrics
    ws.Cells(4, 1).Value = "Customer Count:"
    ws.Cells(4, 2).Value = "900"
    
    ' Update churn metrics
    ws.Cells(5, 1).Value = "Churn Rate:"
    ws.Cells(5, 2).Value = "3%"
    
    ' Format the dashboard
    ws.Range("A1:B5").AutoFormat xlRangeAutoFormatClassic2
    
    MsgBox "Dashboard updated successfully!"
End Sub

## VBA MACRO CODE FOR AUTOMATED EXPORT
Sub ExportToPDF()
    ' Automated PDF Export
    Dim ws As Worksheet
    Set ws = ActiveSheet
    
    Dim exportPath As String
    exportPath = ThisWorkbook.Path & "\Exports\AI_Course_Report_" & Format(Now, "YYYY_MM_DD") & ".pdf"
    
    ' Create export directory if it doesn't exist
    If Dir(ThisWorkbook.Path & "\Exports\", vbDirectory) = "" Then
        MkDir ThisWorkbook.Path & "\Exports\"
    End If
    
    ' Export to PDF
    ws.ExportAsFixedFormat Type:=xlTypePDF, _
        Filename:=exportPath, _
        Quality:=xlQualityStandard, _
        IncludeDocProps:=True, _
        IgnorePrintAreas:=False, _
        OpenAfterPublish:=False
    
    MsgBox "Report exported to PDF successfully at: " & exportPath
End Sub

## VBA MACRO CODE FOR AUTOMATED SCHEDULING
Sub ScheduleMacros()
    ' Automated Macro Scheduling
    Application.OnTime Now + TimeValue("09:00:00"), "UpdateDashboard"
    Application.OnTime Now + TimeValue("17:00:00"), "CheckAlerts"
    Application.OnTime Now + TimeValue("18:00:00"), "BackupWorkbook"
    
    MsgBox "Macros scheduled successfully!"
End Sub
